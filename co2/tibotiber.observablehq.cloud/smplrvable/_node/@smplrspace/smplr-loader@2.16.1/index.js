const c=t=>new Promise((o,s)=>{try{const e=document.createElement("script");e.type="text/javascript",e.async=!0,e.src=t,e.addEventListener("load",()=>{o("ok")}),e.addEventListener("error",()=>{s(`Failed to load the script from ${t}`)}),document.body.appendChild(e)}catch(e){s(e)}}),p=t=>import(t),a=t=>new Promise((o,s)=>{try{const e=document.createElement("link");e.type="text/css",e.href=t,e.rel="stylesheet",e.addEventListener("load",()=>{o("ok")}),e.addEventListener("error",()=>{const l=new Error(`Failed to load the stylesheet from ${t}`);console.error(l),s(l)}),document.head.appendChild(e)}catch(e){console.error(e),s(e)}}),r={umd:{prod:"https://app.smplrspace.com/lib/smplr.js",dev:"https://dev.smplrspace.com/lib/smplr.js",local:"http://localhost:3000/lib/smplr.umd.js"},esm:{prod:"https://app.smplrspace.com/lib/smplr.mjs",dev:"https://dev.smplrspace.com/lib/smplr.mjs",local:"http://localhost:3000/lib/smplr.mjs"},css:{prod:"https://app.smplrspace.com/lib/smplr.css",dev:"https://dev.smplrspace.com/lib/smplr.css",local:"http://localhost:3000/lib/style.css"}};async function d(t="esm",o="prod"){try{a(r.css[o])}catch{console.warn("oops")}try{if(t==="esm"){const s=await p(r.esm[o]);return console.log("loaded esm",s.toString()),s}else{await c(r.umd[o]);const s=window.smplr;if(!s)throw new Error("Failed to load smplr.js");return console.log("loaded umd",s.toString()),s}}catch(s){throw console.error(s),new Error("Failed to load smplr.js")}}export{d as loadSmplrJs};
